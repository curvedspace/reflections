Using remote repositories is good for multi-dev situations.

You might want to do manual pulls in cases where you were working on a feature and did 
not want to incorporate others' changes automatically.  It gives you more flexibility
than if git made this automatic.

Branches are good for local changes, forks are good for getting existing code that you 
can't or won't contribute back to. A clone will allow you to contribute back to the code
if you have contributor access.

Having the remote repo stored locally is useful if you want to see the changes made that are not in your local repo but not apply them right away.

Without git and GitHub, you could collaborate by using a single remote copy of the codebase somewhere and using diff to manually check each file for changes before overwriting it.  This would be harder in most cases but easier when adding new files.

Creating a separate branch lets you make a bunch of changes and keep them separate from the main master branch - this is good if you want to work in isolation for a bit.