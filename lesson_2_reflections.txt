When you initialize a repository it sets up the internal database it uses to keep
track of the files in the repository.  It needs to do this so it can manage the new
files and their changes later on.

The staging area is a place where you can drop changes before commiting then and hence 
adding them to the actual repo.  It gives you flexibility to group changes into a logical
group.

The staging area helps with logical commits because you can add or remove files there
before commiting them.  This lets you build up the final commit slowly.

Branches are good for trying out experimental features without worrying about messing up the exisiting code.

Branches diagrams are good for visualizing the paths in the branch structure.  They can tell you what was added on a given branch as well as when it was merged into another branch (if applicable).

Merging branches takes all the commits from them and makes them available on the new branch post-merge.  Usually you merge from the aux branch into the main branch.

Git's auto merge is good for when the code does not conflict in anyway, but in that case doing a manual merge is better since it may not be straight forward.